{
	"name": "pl_emr_src_landing",
	"properties": {
		"activities": [
			{
				"name": "EMR_config",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "generic_datalake_ls",
						"type": "DatasetReference",
						"parameters": {
							"container": "config",
							"file_path": "emr",
							"file_name": "load_config.csv"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "EMR_config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('EMR_config').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 5,
					"activities": [
						{
							"name": "file_exists",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "generic_adls_parquet_ls",
									"type": "DatasetReference",
									"parameters": {
										"container": "bronze",
										"file_path": {
											"value": "@item().targetpath",
											"type": "Expression"
										},
										"file_name": "@split(item().tablename,'.')[1]"
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							}
						},
						{
							"name": "Clean_bronze_folder",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "file_exists",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('file_exists').output.exists,'true')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "copy_to_archive",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ParquetSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "ParquetReadSettings"
												}
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "generic_adls_parquet_ls",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"file_path": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "generic_adls_parquet_ls",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"file_path": {
														"value": "@concat(item().targetpath,'/archive/',formatDateTime(utcNow(),'yyy'),'/',formatDateTime(utcNow(),'%M'),'/',formatDateTime(utcNow(),'%d'))",
														"type": "Expression"
													},
													"file_name": "@split(item().tablename,'.')[1]"
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "Insert_DB_to_Bronzelayer",
							"type": "IfCondition",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [
								{
									"activity": "Clean_bronze_folder",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().loadtype,'Full')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "fetch_logs",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat(\n    'select coalesce(cast(max(loaddate) as date), ''1900-01-01'') as last_fetched_date from audit.load_logs where ',\n    'data_source=''', item().datasource, ''' and tablename=''', item().tablename, ''''\n)",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "deltalake_ls",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": "'aa'",
													"table_name": "'aaa'"
												}
											},
											"firstRowOnly": false
										}
									},
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "fetch_logs",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat(\n    'select *, ''', \n    item().datasource, \n    ''' as datasource from ', \n    item().tablename, \n    ' where ', \n    item().watermark, \n    ' >= ''', \n    activity('fetch_logs').output.value[0].last_fetched_date,\n    ''''\n)",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "generic_sql_ds",
												"type": "DatasetReference",
												"parameters": {
													"db_name": {
														"value": "@item().database",
														"type": "Expression"
													},
													"table_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													},
													"schema_name": {
														"value": "@split(item().tablename,'.')[0]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "generic_adls_parquet_ls",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"file_path": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"file_name": "@split(item().tablename,'.' )[1]"
												}
											}
										]
									},
									{
										"name": "Lookup1",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat(\n    'insert into audit.load_logs(data_source, tablename, numberofrowscopied, watermarkcolumnname, loaddate) values (''',\n    item().datasource, ''', ''', \n    item().tablename, ''', ', \n    activity('Copy data1').output.rowscopied, ', ''', \n    item().watermark, ''', ''', \n    utcNow(), ''')'\n)",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "deltalake_ls",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": "'a'",
													"table_name": "'aaa'"
												}
											},
											"firstRowOnly": true
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "fulldata_copy",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@concat ('select *,''',item().datasource,''' as datasource from ',item().tablename)\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "generic_sql_ds",
												"type": "DatasetReference",
												"parameters": {
													"db_name": {
														"value": "@item().database",
														"type": "Expression"
													},
													"table_name": {
														"value": "@split(item().tablename,'.')[1]",
														"type": "Expression"
													},
													"schema_name": {
														"value": "@split(item().tablename,'.')[0]",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "generic_adls_parquet_ls",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"file_path": {
														"value": "@item().targetpath",
														"type": "Expression"
													},
													"file_name": {
														"value": "@split(item().tablename,'.' )[1]",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "insert_logs_full_load",
										"type": "Lookup",
										"dependsOn": [
											{
												"activity": "fulldata_copy",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureDatabricksDeltaLakeSource",
												"query": {
													"value": "@concat(\n    'INSERT INTO audit.load_logs (data_source, tablename, numberofrowscopied, watermarkcolumnname, loaddate) VALUES (''',\n    item().datasource, ''', ''',\n    item().tablename, ''', ',\n    activity('fulldata_copy').output.rowscopied, ', ''',\n    item().watermark, ''', ''',\n    utcNow(), ''')'\n)",
													"type": "Expression"
												}
											},
											"dataset": {
												"referenceName": "deltalake_ls",
												"type": "DatasetReference",
												"parameters": {
													"schema_name": "'aaa'",
													"table_name": "'a'"
												}
											},
											"firstRowOnly": true
										}
									}
								]
							}
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Insert_DB_to_Bronzelayer",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().is_active,'1')",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "STEP1",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"policy": {
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "insert_DB_tobronze",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2024-12-28T03:12:19Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}